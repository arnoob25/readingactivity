container:
  type: HtmlTemplate
  properties: {tooltip: '', background: '', foreground: '', border: '', visible: true,
    role: null, html: "<center style=\"font-style:italic; color:#888; margin: 3em;\"\
      >\n  <!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        #box {\n      \
      \      width: 100%;\n            height: 100px;\n            border: 1px solid\
      \ #000;\n            border-radius: 16px;\n            position: relative;\n\
      \            overflow: hidden;\n        }\n\n        #car {\n            width:\
      \ 50px;\n            height: 30px;\n            background-color: red;\n   \
      \         position: absolute;\n            top: 35%;\n            left: 0;\n\
      \        }\n    </style>\n</head>\n\n<body>\n\n    <p align = 'left'>Force:\
      \ <span id=\"forceOutput\">0</span></p>\n    <p align = 'left'>Time to finish\
      \ line: <span id=\"timeOutput\">0</span>s</p>\n\n    <input type=\"range\" min=\"\
      0\" max=\"50\" value=\"0\" step=\"1\" class=\"slider\" id=\"forceInput\">\n\n\
      \    <button onclick=\"simulate()\">Simulate</button>\n    <button onclick=\"\
      reset()\">Reset</button>\n\n    <div id=\"box\">\n        <div id=\"car\"></div>\n\
      \    </div>\n\n    <script>\n        var forceInput = document.getElementById(\"\
      forceInput\");\n        var forceOutput = document.getElementById(\"forceOutput\"\
      );\n        var timeOutput = document.getElementById(\"timeOutput\");\n    \
      \    var car = document.getElementById(\"car\");\n        var mass = 5; // mass\
      \ of the car\n        var lastFrameTime;\n\n        forceInput.oninput = function\
      \ () {\n            forceOutput.innerHTML = this.value * 100; // Display force\
      \ in Newtons\n        }\n\n        function simulate() {\n            var force\
      \ = forceInput.value * 100; // convert K to actual force\n            var acceleration\
      \ = force / mass; // F=ma\n            var velocity = 0; // initial velocity\n\
      \            var position = 0; // initial position\n            var startTime;\n\
      \n            // Cancel any existing animation frame request\n            if\
      \ (lastFrameTime) {\n                cancelAnimationFrame(lastFrameTime);\n\
      \            }\n\n            function frame(time) {\n                if (!lastFrameTime)\
      \ {\n                    lastFrameTime = time;\n                    startTime\
      \ = time;\n                }\n\n                var timeStep = (time - lastFrameTime)\
      \ / 1000; // time step in seconds\n                lastFrameTime = time;\n\n\
      \                velocity += acceleration * timeStep; // v = u + at\n      \
      \          position += velocity * timeStep; // s = ut + 1/2at^2\n\n        \
      \        if (position >= document.getElementById('box').offsetWidth - car.offsetWidth)\
      \ {\n                    position = document.getElementById('box').offsetWidth\
      \ - car.offsetWidth; // stop at the border of the box\n                    cancelAnimationFrame(lastFrameTime);\n\
      \                    lastFrameTime = null;\n                    timeOutput.innerHTML\
      \ = ((time - startTime) / 1000).toFixed(2); // Display time to finish line in\
      \ seconds\n                    return;\n                }\n\n              \
      \  car.style.left = position + 'px'; // update car position\n\n            \
      \    requestAnimationFrame(frame);\n\n                // Update time to finish\
      \ line in real-time\n                timeOutput.innerHTML = ((time - startTime)\
      \ / 1000).toFixed(2);\n            }\n\n            requestAnimationFrame(frame);\n\
      \        }\n\n        function reset() {\n            if (lastFrameTime) {\n\
      \                cancelAnimationFrame(lastFrameTime);\n                lastFrameTime\
      \ = null;\n            }\n            car.style.left = '0px';\n            forceOutput.innerHTML\
      \ = '0';\n            timeOutput.innerHTML = '0';\n            forceInput.value\
      \ = '0';\n        }\n    </script>\n\n</body>\n\n</html>\n</center>\n<div anvil-slot=\"\
      default\"></div>"}
  data_bindings: []
components: []
is_package: true
custom_component: true
